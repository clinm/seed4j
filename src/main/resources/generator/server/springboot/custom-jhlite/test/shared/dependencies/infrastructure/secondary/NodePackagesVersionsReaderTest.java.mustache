package {{ packageName }}.shared.dependencies.infrastructure.secondary;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import {{ packageName }}.UnitTest;
import com.seed4j.module.domain.ProjectFiles;
import com.seed4j.module.domain.nodejs.NodePackageName;
import com.seed4j.module.domain.nodejs.NodePackageVersion;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.ArgumentMatchers.anyString;
import static org.mockito.Mockito.when;
import static {{ packageName }}.shared.dependencies.domain.{{ baseName }}NodePackagesVersionSource.{{ baseNameUpperCased }};

@UnitTest
@ExtendWith(MockitoExtension.class)
class {{ baseName }}NodePackagesVersionsReaderTest {

  @Mock
  private ProjectFiles projectFiles;

  @InjectMocks
  private {{ baseName }}NodePackagesVersionsReader reader;

  @Test
  void shouldGetVersionFromCustomSource() {
    mockProjectFiles();

    NodePackageVersion version = reader.get().get(new NodePackageName("vue"), {{ baseNameUpperCased }}.build());

    assertThat(version).isEqualTo(new NodePackageVersion("1.2.3"));
  }

  private void mockProjectFiles() {
    when(projectFiles.readString(anyString())).thenReturn(
      """
      {
        "dependencies": {
          "vue": "1.2.3"
        },
      }
      """
    );
  }
}
